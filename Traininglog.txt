Epoch 3/5
15600/15600 [==============================] - 299s - loss: 0.0559 - val_loss: 0.0545
Epoch 4/5
15600/15600 [==============================] - 298s - loss: 0.0497 - val_loss: 0.0476
Epoch 5/5
15600/15600 [==============================] - 299s - loss: 0.0442 - val_loss: 0.0465

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record,./Recovery,./RecordOpposite --epochs 5 --offset 0.25 --output
 nvidOpDrp0_25
Using TensorFlow backend.
convert!!!!
./Record
./Recovery
./RecordOpposite
Train on 8040 samples, validate on 2010 samples
Epoch 1/5
8040/8040 [==============================] - 191s - loss: 0.0949 - val_loss: 0.1232
Epoch 2/5
8040/8040 [==============================] - 190s - loss: 0.0554 - val_loss: 0.1234
Epoch 3/5
8040/8040 [==============================] - 191s - loss: 0.0539 - val_loss: 0.1242
Epoch 4/5
8040/8040 [==============================] - 191s - loss: 0.0534 - val_loss: 0.1248
Epoch 5/5
8040/8040 [==============================] - 191s - loss: 0.0534 - val_loss: 0.1246

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record,./Recovery,./RecordOpposite --epochs 5 --offset 0.2 --output
nvidOpDrp0_2
Using TensorFlow backend.
convert!!!!
./Record
./Recovery
./RecordOpposite
Train on 8040 samples, validate on 2010 samples
Epoch 1/5
8040/8040 [==============================] - 191s - loss: 0.0925 - val_loss: 0.1104
Epoch 2/5
8040/8040 [==============================] - 191s - loss: 0.0515 - val_loss: 0.1111
Epoch 3/5
8040/8040 [==============================] - 191s - loss: 0.0493 - val_loss: 0.1110
Epoch 4/5
8040/8040 [==============================] - 191s - loss: 0.0494 - val_loss: 0.1111
Epoch 5/5
8040/8040 [==============================] - 191s - loss: 0.0468 - val_loss: 0.1114

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record,./Recovery,./RecordOpposite --epochs 5 --offset 0.15 --output
 nvidOpDrp0_15
Using TensorFlow backend.
convert!!!!
./Record
./Recovery
./RecordOpposite
Train on 8040 samples, validate on 2010 samples
Epoch 1/5
8040/8040 [==============================] - 191s - loss: 0.0920 - val_loss: 0.1052
Epoch 2/5
8040/8040 [==============================] - 191s - loss: 0.0487 - val_loss: 0.1057
Epoch 3/5
8040/8040 [==============================] - 191s - loss: 0.0461 - val_loss: 0.1070
Epoch 4/5
8040/8040 [==============================] - 191s - loss: 0.0450 - val_loss: 0.1078
Epoch 5/5
8040/8040 [==============================] - 191s - loss: 0.0446 - val_loss: 0.1076

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record,./Recovery,./RecordOpposite --epochs 5 --offset 0.1 --output
nvidOpDrp0_1
Using TensorFlow backend.
convert!!!!
./Record
./Recovery
./RecordOpposite
Train on 8040 samples, validate on 2010 samples
Epoch 1/5
8040/8040 [==============================] - 191s - loss: 0.1083 - val_loss: 0.0973
Epoch 2/5
8040/8040 [==============================] - 191s - loss: 0.0464 - val_loss: 0.0983
Epoch 3/5
8040/8040 [==============================] - 191s - loss: 0.0438 - val_loss: 0.0981
Epoch 4/5
8040/8040 [==============================] - 191s - loss: 0.0438 - val_loss: 0.0982
Epoch 5/5
8040/8040 [==============================] - 191s - loss: 0.0419 - val_loss: 0.0996

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record1,./Record1Opposite --epochs 5 --offset 0.25 --output nvid1OpD
rp0_25
Using TensorFlow backend.
convert!!!!
./Record1
./Record1Opposite
Train on 7560 samples, validate on 1890 samples
Epoch 1/5
7560/7560 [==============================] - 180s - loss: 0.2093 - val_loss: 0.2346
Epoch 2/5
7560/7560 [==============================] - 180s - loss: 0.1423 - val_loss: 0.2348
Epoch 3/5
7560/7560 [==============================] - 179s - loss: 0.1359 - val_loss: 0.2361
Epoch 4/5
7560/7560 [==============================] - 180s - loss: 0.1360 - val_loss: 0.2376
Epoch 5/5
7560/7560 [==============================] - 179s - loss: 0.1314 - val_loss: 0.2376

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record1,./Record1Opposite --epochs 5 --offset 0.2 --output nvid1OpDr
p0_2
Using TensorFlow backend.
convert!!!!
./Record1
./Record1Opposite
Train on 7560 samples, validate on 1890 samples
Epoch 1/5
7560/7560 [==============================] - 180s - loss: 0.2052 - val_loss: 0.2250
Epoch 2/5
7560/7560 [==============================] - 180s - loss: 0.1335 - val_loss: 0.2251
Epoch 3/5
7560/7560 [==============================] - 180s - loss: 0.1277 - val_loss: 0.2238
Epoch 4/5
7560/7560 [==============================] - 180s - loss: 0.1282 - val_loss: 0.2243
Epoch 5/5
7560/7560 [==============================] - 180s - loss: 0.1247 - val_loss: 0.2233

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record1,./Record1Opposite --epochs 5 --offset 0.15 --output nvid1OpD
rp0_15
Using TensorFlow backend.
convert!!!!
./Record1
./Record1Opposite
Train on 7560 samples, validate on 1890 samples
Epoch 1/5
7560/7560 [==============================] - 180s - loss: 0.2718 - val_loss: 0.1929
Epoch 2/5
7560/7560 [==============================] - 179s - loss: 0.1328 - val_loss: 0.1925
Epoch 3/5
7560/7560 [==============================] - 180s - loss: 0.1269 - val_loss: 0.1928
Epoch 4/5
7560/7560 [==============================] - 180s - loss: 0.1238 - val_loss: 0.1928
Epoch 5/5
7560/7560 [==============================] - 180s - loss: 0.1192 - val_loss: 0.1923

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record1,./Record1Opposite --epochs 5 --offset 0.1 --output nvid1OpDr
p0_1
Using TensorFlow backend.
convert!!!!
./Record1
./Record1Opposite
Train on 7560 samples, validate on 1890 samples
Epoch 1/5
7560/7560 [==============================] - 180s - loss: 0.2184 - val_loss: 0.2013
Epoch 2/5
7560/7560 [==============================] - 180s - loss: 0.1254 - val_loss: 0.2007
Epoch 3/5
7560/7560 [==============================] - 179s - loss: 0.1174 - val_loss: 0.2007
Epoch 4/5
7560/7560 [==============================] - 179s - loss: 0.1142 - val_loss: 0.2013
Epoch 5/5
7560/7560 [==============================] - 180s - loss: 0.1157 - val_loss: 0.2001

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record1 --epochs 5 --offset 0.25 --output nvid1Drp0_25
Using TensorFlow backend.
convert!!!!
./Record1
Train on 4000 samples, validate on 1001 samples
Epoch 1/5
4000/4000 [==============================] - 96s - loss: 0.3798 - val_loss: 0.2333
Epoch 2/5
4000/4000 [==============================] - 95s - loss: 0.1611 - val_loss: 0.2335
Epoch 3/5
4000/4000 [==============================] - 95s - loss: 0.1498 - val_loss: 0.2343
Epoch 4/5
4000/4000 [==============================] - 95s - loss: 0.1448 - val_loss: 0.2351
Epoch 5/5
4000/4000 [==============================] - 95s - loss: 0.1408 - val_loss: 0.2354

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record1 --epochs 5 --offset 0.2 --output nvid1Drp0_2
Using TensorFlow backend.
convert!!!!
./Record1
Train on 4000 samples, validate on 1001 samples
Epoch 1/5
4000/4000 [==============================] - 95s - loss: 0.2894 - val_loss: 0.2244
Epoch 2/5
4000/4000 [==============================] - 94s - loss: 0.1483 - val_loss: 0.2245
Epoch 3/5
4000/4000 [==============================] - 95s - loss: 0.1372 - val_loss: 0.2257
Epoch 4/5
4000/4000 [==============================] - 94s - loss: 0.1306 - val_loss: 0.2271
Epoch 5/5
4000/4000 [==============================] - 95s - loss: 0.1287 - val_loss: 0.2278

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record1 --epochs 5 --offset 0.15 --output nvid1Drp0_15
Using TensorFlow backend.
convert!!!!
./Record1
Train on 4000 samples, validate on 1001 samples
Epoch 1/5
4000/4000 [==============================] - 95s - loss: 0.2950 - val_loss: 0.1991
Epoch 2/5
4000/4000 [==============================] - 95s - loss: 0.1490 - val_loss: 0.1994
Epoch 3/5
4000/4000 [==============================] - 95s - loss: 0.1334 - val_loss: 0.2000
Epoch 4/5
4000/4000 [==============================] - 95s - loss: 0.1283 - val_loss: 0.2013
Epoch 5/5
4000/4000 [==============================] - 95s - loss: 0.1259 - val_loss: 0.2034

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record1 --epochs 5 --offset 0.1 --output nvid1Drp0_1
Using TensorFlow backend.
convert!!!!
./Record1
Train on 4000 samples, validate on 1001 samples
Epoch 1/5
4000/4000 [==============================] - 95s - loss: 0.2346 - val_loss: 0.1985
Epoch 2/5
4000/4000 [==============================] - 94s - loss: 0.1426 - val_loss: 0.1993
Epoch 3/5
4000/4000 [==============================] - 94s - loss: 0.1288 - val_loss: 0.2017
Epoch 4/5
4000/4000 [==============================] - 95s - loss: 0.1233 - val_loss: 0.2027
Epoch 5/5
4000/4000 [==============================] - 95s - loss: 0.1164 - val_loss: 0.2074

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record,./Recovery,./RecordOpposite,./Record1,./Record1Opposite --epo
chs 5 --offset 0.25 --output nvidAllDrp0_25
Using TensorFlow backend.
convert!!!!
./Record
./Recovery
./RecordOpposite
./Record1
./Record1Opposite
Train on 15600 samples, validate on 3900 samples
Epoch 1/5
15600/15600 [==============================] - 403s - loss: 0.1473 - val_loss: 0.1835
Epoch 2/5
15600/15600 [==============================] - 374s - loss: 0.0996 - val_loss: 0.1822
Epoch 3/5
15600/15600 [==============================] - 373s - loss: 0.0967 - val_loss: 0.1819
Epoch 4/5
15600/15600 [==============================] - 375s - loss: 0.0944 - val_loss: 0.1813
Epoch 5/5
15600/15600 [==============================] - 374s - loss: 0.0933 - val_loss: 0.1816

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record,./Recovery,./RecordOpposite,./Record1,./Record1Opposite --epo
chs 5 --offset 0.2 --output nvidAllDrp0_2
Using TensorFlow backend.
convert!!!!
./Record
./Recovery
./RecordOpposite
./Record1
./Record1Opposite
Train on 15600 samples, validate on 3900 samples
Epoch 1/5
15600/15600 [==============================] - 391s - loss: 0.1152 - val_loss: 0.1614
Epoch 2/5
15600/15600 [==============================] - 373s - loss: 0.0902 - val_loss: 0.1595
Epoch 3/5
15600/15600 [==============================] - 374s - loss: 0.0884 - val_loss: 0.1603
Epoch 4/5
15600/15600 [==============================] - 13833s - loss: 0.0869 - val_loss: 0.1641
Epoch 5/5
15600/15600 [==============================] - 400s - loss: 0.0874 - val_loss: 0.1608

(carnd-term1) D:\Kuby\AutonomusCar\behavioralCloning>python trainNvidiaDrop.py --dataPath ./Record,./Recovery,./RecordOpposite,./Record1,./Record1Opposite --epo
chs 5 --offset 0.15 --output nvidAllDrp0_15
Using TensorFlow backend.
convert!!!!
./Record
./Recovery
./RecordOpposite
./Record1
./Record1Opposite
Train on 15600 samples, validate on 3900 samples
Epoch 1/5
15600/15600 [==============================] - 568s - loss: 0.1215 - val_loss: 0.1548
Epoch 2/5
15600/15600 [==============================] - 394s - loss: 0.0874 - val_loss: 0.1548
Epoch 3/5
15600/15600 [==============================] - 390s - loss: 0.0851 - val_loss: 0.1545
Epoch 4/5
15600/15600 [==============================] - 386s - loss: 0.0837 - val_loss: 0.1546
Epoch 5/5
15600/15600 [==============================] - 387s - loss: 0.0826 - val_loss: 0.1546
